---
# ============================================================================
# Pre-flight: Ensure Target Containers are Running and Ready
# ============================================================================
# When executing with --tags llama-cpp, container creation/start tasks are 
# skipped. These tasks ensure containers are started and accessible before
# proceeding with llama-cpp installation.
# ============================================================================

- name: Refresh ct_matrix for tag-filtered execution
  ansible.builtin.set_fact:
    ct_matrix: "{{ proxmox_cts if proxmox_cts is not string else (proxmox_cts | from_json) }}"
  when:
    - ct_matrix is not defined
  tags: ['llama-cpp', 'preflight']

- name: Query container status via Proxmox API
  community.general.proxmox:
    node: "{{ proxmox_node }}"
    vmid: "{{ item.vmid }}"
    state: current
  register: container_status
  loop: "{{ ct_matrix }}"
  loop_control:
    label: "{{ item.hostname }} (VMID: {{ item.vmid }})"
  failed_when: false
  when:
    - not ansible_check_mode
    - proxmox_credentials_present
    - item.vmid is defined
  tags: ['llama-cpp', 'preflight']

- name: Start stopped containers
  community.general.proxmox:
    node: "{{ proxmox_node }}"
    vmid: "{{ item.item.vmid }}"
    state: started
    timeout: 60
  loop: "{{ container_status.results | default([]) }}"
  loop_control:
    label: "{{ item.item.hostname }} (VMID: {{ item.item.vmid }})"
  when:
    - not ansible_check_mode
    - proxmox_credentials_present
    - item.status is defined
    - item.status != 'running'
    - not item.failed | default(false)
  tags: ['llama-cpp', 'preflight']

- name: Wait for containers to be exec-ready (boot complete)
  ansible.builtin.shell: |
    ssh -p {{ proxmox_ssh_port }} {% if proxmox_ssh_key_path | length > 0 %}-i {{ proxmox_ssh_key_path }} {% endif %}-o StrictHostKeyChecking=no -o BatchMode=yes {{ proxmox_ssh_user }}@{{ proxmox_api_host }} bash -lc '
      vmid="{{ item.vmid }}";
      {{ 'sudo -n ' if proxmox_ssh_use_sudo else '' }}pct exec "$vmid" -- sh -c "echo ready" 2>/dev/null
    '
  args:
    executable: /bin/bash
  register: exec_ready_check
  loop: "{{ ct_matrix }}"
  loop_control:
    label: "{{ item.hostname }} (VMID: {{ item.vmid }})"
  retries: 30
  delay: 2
  until: exec_ready_check.rc == 0 and 'ready' in exec_ready_check.stdout
  changed_when: false
  failed_when: false
  when:
    - not ansible_check_mode
    - proxmox_credentials_present
    - proxmox_fetch_ip_via_ssh
    - item.vmid is defined
  tags: ['llama-cpp', 'preflight']

- name: Verify network connectivity in containers
  ansible.builtin.shell: |
    ssh -p {{ proxmox_ssh_port }} {% if proxmox_ssh_key_path | length > 0 %}-i {{ proxmox_ssh_key_path }} {% endif %}-o StrictHostKeyChecking=no -o BatchMode=yes {{ proxmox_ssh_user }}@{{ proxmox_api_host }} bash -lc '
      vmid="{{ item.vmid }}";
      {{ 'sudo -n ' if proxmox_ssh_use_sudo else '' }}pct exec "$vmid" -- sh -c "ping -c 1 -W 3 8.8.8.8 >/dev/null 2>&1 && echo network_ok"
    '
  args:
    executable: /bin/bash
  register: network_check
  loop: "{{ ct_matrix }}"
  loop_control:
    label: "{{ item.hostname }} (VMID: {{ item.vmid }})"
  retries: 10
  delay: 3
  until: network_check.rc == 0 and 'network_ok' in network_check.stdout
  changed_when: false
  failed_when: false
  when:
    - not ansible_check_mode
    - proxmox_credentials_present
    - proxmox_fetch_ip_via_ssh
    - item.vmid is defined
  tags: ['llama-cpp', 'preflight']

- name: Rebuild connection info for llama-cpp tasks
  block:
    - name: Initialize connection info list
      ansible.builtin.set_fact:
        ct_connection_info: []
    
    - name: Build connection info from ct_matrix
      ansible.builtin.set_fact:
        ct_connection_info: >-
          {{ ct_connection_info | default([]) + [{
            'hostname': item.hostname,
            'vmid': (item.vmid | string),
            'ip': (item.ip if (item.ip | default('dhcp')) != 'dhcp' else '')
          }] }}
      loop: "{{ ct_matrix }}"
      loop_control:
        label: "{{ item.hostname }}"
  when:
    - not ansible_check_mode
    - ct_connection_info is not defined or ct_connection_info | length == 0
  tags: ['llama-cpp', 'preflight']

- name: Container readiness summary
  ansible.builtin.debug:
    msg: "âœ“ Container {{ item.hostname }} (VMID: {{ item.vmid }}) ready for llama-cpp installation"
  loop: "{{ ct_matrix }}"
  loop_control:
    label: "{{ item.hostname }}"
  when:
    - not ansible_check_mode
  tags: ['llama-cpp', 'preflight']
